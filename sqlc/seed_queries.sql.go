// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: seed_queries.sql

package sqlc

import (
	"context"
	"database/sql"
)

const countUsers = `-- name: CountUsers :one

SELECT count(*) FROM users
`

// -----------------
// Count Queries --
// -----------------
func (q *Queries) CountUsers(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, countUsers)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const seedUser = `-- name: SeedUser :exec

INSERT INTO users (id, uuid, name, github, twitter, mastodon) VALUES ($1, $2, $3, $4, $5, $6)
`

type SeedUserParams struct {
	ID       int64
	Uuid     string
	Name     string
	Github   sql.NullString
	Twitter  sql.NullString
	Mastodon sql.NullString
}

// ----------------
// Seed Queries --
// ----------------
func (q *Queries) SeedUser(ctx context.Context, arg SeedUserParams) error {
	_, err := q.db.ExecContext(ctx, seedUser,
		arg.ID,
		arg.Uuid,
		arg.Name,
		arg.Github,
		arg.Twitter,
		arg.Mastodon,
	)
	return err
}
